{"version":3,"sources":["routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["Toaster","React","lazy","Tables","Breadcrumbs","Cards","Carousels","Collapses","BasicForms","Jumbotrons","ListGroups","Navbars","Navs","Paginations","Popovers","ProgressBar","Switches","Tabs","Tooltips","BrandButtons","ButtonDropdowns","ButtonGroups","Buttons","Charts","Dashboard","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Colors","Typography","Widgets","Users","User","routes","path","exact","name","component","loading","className","TheContent","fluid","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","href","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","withSubheader","inHeader","onClick","val","includes","type","height","alt","_nav","_tag","icon","customClasses","TheSidebar","show","onShowChange","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/28.e997f348.chunk.js","sourcesContent":["import React from 'react';\n\nconst Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'));\n\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'));\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\nconst BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\n\nconst Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\nconst Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'));\nconst Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\nconst ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\nconst Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\nconst Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\nconst BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\nconst ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\nconst Charts = React.lazy(() => import('./views/charts/Charts'));\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'));\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'));\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors ori'));\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'));\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'));\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\nconst DataReview = React.lazy(()=> import('./views/pages/OldData/OldData'));\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/OldData', name: 'OldData', component: DataReview },\n  { path: '/theme/typography', name: 'Typography', component: Typography },\n  { path: '/base', name: 'Base', component: Cards, exact: true },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/forms', name: 'Forms', component: BasicForms },\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  { path: '/base/switches', name: 'Switches', component: Switches },\n  { path: '/base/tables', name: 'Tables', component: Tables },\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/brands', name: 'Brands', component: Brands },\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\n  { path: '/widgets', name: 'Widgets', component: Widgets },\n  { path: '/users', exact: true,  name: 'Users', component: Users },\n  { path: '/users/:id', exact: true, name: 'User Details', component: User }\n];\n\nexport default routes;\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n    return (\n        <CFooter fixed={false}>\n            <div>\n                <span className=\"ml-1\" href=\"http://www.focusappliedtechnologies.com/\">\n                    Focus Applied Technologies\n                </span>\n            </div>\n        </CFooter>\n    )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n      </CHeaderNav>\n\n      \n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n          \n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\nconst _nav =  [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n  },\n  \n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Control Panel']\n  // },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Review old Data',\n    to: '/theme/Colors',\n    icon: 'cil-drop',\n  },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Line Two',\n  //   to: '/theme/typography',\n  //   icon: 'cil-drop',\n  // },\n]\n\nexport default _nav\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from \"@coreui/react\";\n\n// import CIcon from \"@coreui/icons-react\";\n\n// sidebar nav config\nimport navigation from \"./_nav\";\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch();\n  const show = useSelector((state) => state.sidebarShow);\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({ type: \"set\", sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" href=\"http://www.focusappliedtechnologies.com/\">\n        Focus Applied Technologies\n      </CSidebarBrand>\n      <CSidebarNav>\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle,\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\n    </CSidebar>\n  );\n};\n\nexport default React.memo(TheSidebar);\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}