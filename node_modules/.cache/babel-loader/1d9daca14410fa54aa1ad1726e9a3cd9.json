{"ast":null,"code":"import _toConsumableArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/MainChartExample.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils\"; //import Firebase from \"src/firebase\";\n\nimport moment from \"moment\";\nimport io from 'socket.io-client';\nimport { BarChart, Bar, Line, LineChart, XAxis, YAxis, Tooltip } from 'recharts'; //======================Socket Setup=================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n}); //=====================Section End===================\n\nvar MainChartTemperature = function MainChartTemperature(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // 1. listen for a cpu event and update the state\n\n\n  useEffect(function () {\n    socket.on('temp', function (temperature) {\n      console.log(temperature);\n      setData(function (currentData) {\n        return [].concat(_toConsumableArray(currentData), [temperature]);\n      });\n    });\n  }, []); // 2. render the line chart using the state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1500,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Line, {\n        dataKey: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MainChartTemperature, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MainChartTemperature;\nexport default MainChartTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainChartTemperature\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/MainChartExample.js"],"names":["React","useEffect","useState","CChartLine","getStyle","hexToRgba","moment","io","BarChart","Bar","Line","LineChart","XAxis","YAxis","Tooltip","socket","transports","MainChartTemperature","data","setData","on","temperature","console","log","currentData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,eAApC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,OAPF,QAQO,UARP,C,CAWA;;;AAEA,IAAMC,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACzCS,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB,C,CAKA;;AAIA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAQ;AAAA;;AAAA;;AAAA,kBACXf,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,MAC5BgB,IAD4B;AAAA,MACtBC,OADsB,kBAGnC;;;AACAlB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,MAAM,CAACK,EAAP,CAAU,MAAV,EAAkB,UAAAC,WAAW,EAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAF,MAAAA,OAAO,CAAC,UAAAK,WAAW;AAAA,4CAAQA,WAAR,IAAqBH,WAArB;AAAA,OAAZ,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT,CAJmC,CAWnC;;AACA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAwB,MAAA,MAAM,EAAE,GAAhC;AAAqC,MAAA,IAAI,EAAEH,IAA3C;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CArBD;;GAAMD,oB;;KAAAA,oB;AAuBN,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\n//import Firebase from \"src/firebase\";\nimport moment from \"moment\";\nimport io from 'socket.io-client';\nimport {\n  BarChart,\n  Bar,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip\n} from 'recharts';\n\n\n//======================Socket Setup=================\n\nconst socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n});\n\n\n//=====================Section End===================\n\n\n\nconst MainChartTemperature = ({}) => {\n  const [data, setData] = useState([]);\n\n  // 1. listen for a cpu event and update the state\n  useEffect(() => {\n    socket.on('temp', temperature => {\n      console.log(temperature);\n      setData(currentData => [...currentData, temperature]);\n    });\n  }, []);\n\n  // 2. render the line chart using the state\n  return (\n    <div>\n      <LineChart width={1500} height={300} data={data}>\n        <XAxis dataKey=\"time\" />\n        <YAxis />\n        <Line dataKey=\"value\" />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default MainChartTemperature;\n"]},"metadata":{},"sourceType":"module"}