{"ast":null,"code":"var _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/button.js\";\nimport React, { useState } from 'react';\n/* MQTT Configuration */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"LEDMQTT\",\n  port: 1883,\n  keepalive: 60\n};\n/* Section End */\n\nfunction LEDButton() {\n  // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\n  // if(count%2 === 0 ){\n  //     client.publish(\"esp32/led\", \"ON\");\n  // }else{\n  //     client.publish(\"esp32/led\", \"OFF\");\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        var client = mqtt.connect(Broker_URL, options);\n        client.publish(\"esp32/led\", \"ON\");\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LEDButton;\nexport default LEDButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LEDButton\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/button.js"],"names":["React","useState","mqtt","require","Broker_URL","options","clientId","port","keepalive","LEDButton","count","client","connect","publish"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,UAAU,GAAG,kBAAjB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,SADE;AAEZC,EAAAA,IAAI,EAAE,IAFM;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAd;AAMA;;AAGA,SAASC,SAAT,GAAqB;AACnB;AAKE;AACA;AACA;AACA;AACA;AAGF,sBACE;AAAA,4BACE;AAAA,iCAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,mBAAI;AACnB,YAAIC,MAAM,GAAGT,IAAI,CAACU,OAAL,CAAaR,UAAb,EAAyBC,OAAzB,CAAb;AACAM,QAAAA,MAAM,CAACE,OAAP,CAAe,WAAf,EAA4B,IAA5B;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAxBQJ,S;AAyBT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\n/* MQTT Configuration */\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"LEDMQTT\",\n  port: 1883,\n  keepalive: 60,\n};\n\n/* Section End */\n\n\nfunction LEDButton() {\n  // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\n  \n\n  \n\n    // if(count%2 === 0 ){\n    //     client.publish(\"esp32/led\", \"ON\");\n    // }else{\n    //     client.publish(\"esp32/led\", \"OFF\");\n    // }\n  \n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={()=>{\n        var client = mqtt.connect(Broker_URL, options);\n        client.publish(\"esp32/led\", \"ON\");\n      }}>\n        Click me\n      </button>\n    </div>\n  );\n}\nexport default LEDButton;"]},"metadata":{},"sourceType":"module"}