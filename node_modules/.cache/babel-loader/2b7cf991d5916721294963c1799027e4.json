{"ast":null,"code":"import _classCallCheck from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/theme/colors/Colors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport Datepicker from 'react-datepicker';\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultValues = {\n  Native: \"\",\n  TextField: \"\",\n  Select: \"\",\n  ReactSelect: {\n    value: \"vanilla\",\n    label: \"Vanilla\"\n  },\n  Checkbox: false,\n  switch: false,\n  RadioGroup: \"\",\n  numberFormat: 123456789,\n  downShift: \"apple\"\n};\n\nfunction DbForm1() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      control = _useForm.control;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data.Node);\n    console.log(data.datevalue);\n    console.log('The Submit button was clicked'); // axios.get(`localhost:9000/data?node=${data.Node}&date=${data.date}`)\n    // .then((response)=>{\n    //   //Data coming in from API, should be sent to create the chart.\n    // })\n    // .catch((error)=>{\n    //   \n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(function (data) {\n      return setData(data);\n    }),\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Node: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({}, register(\"Node\")), {}, {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CCol, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          as: ReactDatePicker,\n          control: control,\n          valueName: \"selected\" // DateSelect value's name is selected\n          ,\n          onChange: function onChange(_ref) {\n            var _ref2 = _slicedToArray(_ref, 1),\n                selected = _ref2[0];\n\n            return selected;\n          },\n          name: \"ReactDatepicker\",\n          className: \"input\",\n          placeholderText: \"Select date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CCol, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DbForm1, \"y0LD+BXNpW6dLhv0dQAS973jdqQ=\", false, function () {\n  return [useForm];\n});\n\n_c = DbForm1;\n\nvar DataReviewChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(DataReviewChart, _React$Component);\n\n  var _super = _createSuper(DataReviewChart);\n\n  function DataReviewChart() {\n    var _this;\n\n    _classCallCheck(this, DataReviewChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      line1: {\n        x: [0],\n        y: [0],\n        name: \"Line 1\"\n      },\n      // line2: {\n      //   x: [1, 2, 3],\n      //   y: [-3, -2, -1],\n      //   name: 'Line 2',\n      // },\n      layout: {\n        datarevision: 0\n      },\n      revision: 0\n    };\n\n    _this.increaseGraphic = function (_ref3) {\n      var value = _ref3.value,\n          analogTwo = _ref3.analogTwo,\n          timeStamp = _ref3.timeStamp;\n      var _this$state = _this.state,\n          line1 = _this$state.line1,\n          line2 = _this$state.line2,\n          layout = _this$state.layout,\n          revision = _this$state.revision;\n      line1.x.push(revision);\n      line1.y.push(value); // if (line1.x.length >= 10) {\n      //   line1.x.shift()\n      //   line1.y.shift()\n      // }\n      // line2.x.push(this.rand())\n      // line2.y.push(this.rand())\n      // if (line2.x.length >= 10) {\n      //   line2.x.shift()\n      //   line2.y.shift()\n      // }\n\n      _this.setState({\n        revision: _this.state.revision + 1\n      });\n\n      layout.datarevision = _this.state.revision + 1;\n    };\n\n    return _this;\n  }\n\n  _createClass(DataReviewChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// setInterval(this.increaseGraphic, 1000)\n      // socket.on(\"ana\", (data) => {\n      //   this.increaseGraphic(data);\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: \"Review Past Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(DbForm1, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCardHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(Plot, {\n              data: [this.state.line1],\n              layout: this.state.layout,\n              revision: this.state.revision,\n              useResizeHandler: true,\n              style: {\n                width: \"100%\",\n                height: \"100%\"\n              },\n              graphDiv: \"graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return DataReviewChart;\n}(React.Component);\n\nexport { DataReviewChart as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"DbForm1\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/theme/colors/Colors.js"],"names":["React","useEffect","useState","createRef","classNames","useForm","Datepicker","CRow","CCol","CCard","CCardHeader","CCardBody","rgbToHex","DocsLink","axios","Plot","defaultValues","Native","TextField","Select","ReactSelect","value","label","Checkbox","switch","RadioGroup","numberFormat","downShift","DbForm1","handleSubmit","register","reset","control","data","setData","onSubmit","console","log","Node","datevalue","ReactDatePicker","selected","DataReviewChart","state","line1","x","y","name","layout","datarevision","revision","increaseGraphic","analogTwo","timeStamp","line2","push","setState","width","height","Component"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport Datepicker from 'react-datepicker';\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst defaultValues = {\n  Native: \"\",\n  TextField: \"\",\n  Select: \"\",\n  ReactSelect: { value: \"vanilla\", label: \"Vanilla\" },\n  Checkbox: false,\n  switch: false,\n  RadioGroup: \"\",\n  numberFormat: 123456789,\n  downShift: \"apple\"\n};\n\nfunction DbForm1() {\n  const { handleSubmit, register, reset, control } = useForm({ defaultValues });\n  const [data, setData] = useState(null);\n\n  const onSubmit = (data) => {\n    \n    \n    console.log(data.Node);\n    console.log(data.datevalue);\n    console.log('The Submit button was clicked');\n    // axios.get(`localhost:9000/data?node=${data.Node}&date=${data.date}`)\n    // .then((response)=>{\n    //   //Data coming in from API, should be sent to create the chart.\n    // })\n    // .catch((error)=>{\n    //   \n    // })\n  };\n\n\n  \n  \n\n  return (\n    <form onSubmit={handleSubmit(data => setData(data))} className=\"form\">\n      <CRow>\n        <CCol>\n          <label>Node: </label>\n          <select {...register(\"Node\")}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n          </select>\n        </CCol>\n        <CCol>\n          <label>Date picker</label>\n          \n          <Controller\n            as={ReactDatePicker}\n            control={control}\n            valueName=\"selected\" // DateSelect value's name is selected\n            onChange={([selected]) => selected}\n            name=\"ReactDatepicker\"\n            className=\"input\"\n            placeholderText=\"Select date\"\n          />\n        </CCol>\n        <CCol>\n          <input type=\"submit\" />\n        </CCol>          \n      </CRow>\n    </form>\n  );\n}\n\nexport default class DataReviewChart extends React.Component {\n  state = {\n    line1: {\n      x: [0],\n      y: [0],\n      name: \"Line 1\",\n    },\n    // line2: {\n    //   x: [1, 2, 3],\n    //   y: [-3, -2, -1],\n    //   name: 'Line 2',\n    // },\n\n    layout: {\n      datarevision: 0,\n    },\n    revision: 0,\n  };\n\n  componentDidMount() {\n    // setInterval(this.increaseGraphic, 1000)\n    // socket.on(\"ana\", (data) => {\n    //   this.increaseGraphic(data);\n    // });\n  }\n\n  increaseGraphic = ({ value, analogTwo, timeStamp }) => {\n    const { line1, line2, layout, revision } = this.state;\n    line1.x.push(revision);\n    line1.y.push(value);\n\n    // if (line1.x.length >= 10) {\n    //   line1.x.shift()\n    //   line1.y.shift()\n    // }\n\n    // line2.x.push(this.rand())\n    // line2.y.push(this.rand())\n    // if (line2.x.length >= 10) {\n    //   line2.x.shift()\n    //   line2.y.shift()\n    // }\n\n    this.setState({ revision: this.state.revision + 1 });\n    layout.datarevision = this.state.revision + 1;\n  };\n\n  render() {\n    return (\n      <div>\n        <CCard>\n          <CCardHeader>Review Past Data</CCardHeader>\n          <CCardBody>\n            <DbForm1 />\n          </CCardBody>\n \n          <CCardHeader></CCardHeader>\n          <CCardBody>\n            <Plot\n              data={[this.state.line1]}\n              layout={this.state.layout}\n              revision={this.state.revision}\n              useResizeHandler={true}\n              style={{ width: \"100%\", height: \"100%\" }}\n              graphDiv=\"graph\"\n            />\n          </CCardBody>\n        </CCard>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}