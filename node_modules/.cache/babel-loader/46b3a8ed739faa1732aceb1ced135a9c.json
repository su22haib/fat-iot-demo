{"ast":null,"code":"import _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/* MQTT Configuration */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"LEDMQTT\",\n  port: 1883,\n  keepalive: 60\n};\n/* Section End */\n\nfunction LEDButton() {\n  _s();\n\n  // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  function LEDstate() {\n    setCount(count + 1);\n    var client = mqtt.connect(Broker_URL, options);\n\n    if (count.isEven()) {\n      client.publish(\"esp32/led\", \"ON\");\n    } else {\n      client.publish(\"esp32/led\", \"OFF\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LEDstate(),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LEDButton, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = LEDButton;\nexport default LEDButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LEDButton\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/button.js"],"names":["React","useState","mqtt","require","Broker_URL","options","clientId","port","keepalive","LEDButton","count","setCount","LEDstate","client","connect","isEven","publish"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,UAAU,GAAG,kBAAjB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,SADE;AAEZC,EAAAA,IAAI,EAAE,IAFM;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAd;AAMA;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACnB;AADmB,kBAEOR,QAAQ,CAAC,CAAD,CAFf;AAAA;AAAA,MAEZS,KAFY;AAAA,MAELC,QAFK;;AAMnB,WAASC,QAAT,GAAmB;AACjBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,QAAIG,MAAM,GAAGX,IAAI,CAACY,OAAL,CAAaV,UAAb,EAAyBC,OAAzB,CAAb;;AAEA,QAAGK,KAAK,CAACK,MAAN,EAAH,EAAkB;AACdF,MAAAA,MAAM,CAACG,OAAP,CAAe,WAAf,EAA4B,IAA5B;AACH,KAFD,MAEK;AACDH,MAAAA,MAAM,CAACG,OAAP,CAAe,WAAf,EAA4B,KAA5B;AACH;AACF;;AAED,sBACE;AAAA,4BACE;AAAA,iCAAgBN,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,QAAQ,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzBQH,S;;KAAAA,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\n/* MQTT Configuration */\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"LEDMQTT\",\n  port: 1883,\n  keepalive: 60,\n};\n\n/* Section End */\n\n\nfunction LEDButton() {\n  // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\n  const [count, setCount] = useState(0);\n\n  \n\n  function LEDstate(){\n    setCount(count + 1)\n    var client = mqtt.connect(Broker_URL, options);\n\n    if(count.isEven()){\n        client.publish(\"esp32/led\", \"ON\");\n    }else{\n        client.publish(\"esp32/led\", \"OFF\");\n    }\n  }\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={LEDstate()}>\n        Click me\n      </button>\n    </div>\n  );\n}\nexport default LEDButton;"]},"metadata":{},"sourceType":"module"}