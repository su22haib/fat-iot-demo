{"ast":null,"code":"import _toConsumableArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/MainChartHumidity.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport { BarChart, Bar, Line, LineChart, XAxis, YAxis, Tooltip } from 'recharts'; //======================Socket Setup=================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n}); //=====================Section End===================\n\nvar MainChartHumidity = function MainChartHumidity(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // 1. listen for a cpu event and update the state\n\n\n  useEffect(function () {\n    socket.on('hum', function (humidity) {\n      setData(function (currentData) {\n        return [].concat(_toConsumableArray(currentData), [humidity]);\n      });\n    });\n  }, []); // 2. render the line chart using the state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1500,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Line, {\n        dataKey: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MainChartHumidity, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MainChartHumidity;\nexport default MainChartHumidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainChartHumidity\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/MainChartHumidity.js"],"names":["React","useEffect","useState","io","BarChart","Bar","Line","LineChart","XAxis","YAxis","Tooltip","socket","transports","MainChartHumidity","data","setData","on","humidity","currentData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,OAPF,QAQO,UARP,C,CAWA;;;AAEA,IAAMC,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACzCS,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB,C,CAKA;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAQ;AAAA;;AAAA;;AAAA,kBACRX,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MACzBY,IADyB;AAAA,MACnBC,OADmB,kBAGhC;;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,MAAM,CAACK,EAAP,CAAU,KAAV,EAAiB,UAAAC,QAAQ,EAAI;AAC3BF,MAAAA,OAAO,CAAC,UAAAG,WAAW;AAAA,4CAAQA,WAAR,IAAqBD,QAArB;AAAA,OAAZ,CAAP;AACD,KAFD;AAID,GALQ,EAKN,EALM,CAAT,CAJgC,CAWhC;;AACA,sBACE;AAAA,2BAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAwB,MAAA,MAAM,EAAE,GAAhC;AAAqC,MAAA,IAAI,EAAEH,IAA3C;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAtBD;;GAAMD,iB;;KAAAA,iB;AAwBN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport {\n  BarChart,\n  Bar,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip\n} from 'recharts';\n\n\n//======================Socket Setup=================\n\nconst socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n});\n\n\n//=====================Section End===================\n\n\nconst MainChartHumidity = ({}) => {\n  const [data, setData] = useState([]);\n\n  // 1. listen for a cpu event and update the state\n  useEffect(() => {\n    socket.on('hum', humidity => {\n      setData(currentData => [...currentData, humidity]);\n    });\n  \n  }, []);\n\n  // 2. render the line chart using the state\n  return (\n    <div>\n        \n        <LineChart width={1500} height={300} data={data}>\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Line dataKey=\"value\" />\n        </LineChart>\n    </div>\n  );\n};\n\nexport default MainChartHumidity;\n"]},"metadata":{},"sourceType":"module"}