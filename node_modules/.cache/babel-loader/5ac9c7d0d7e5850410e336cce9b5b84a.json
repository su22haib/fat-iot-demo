{"ast":null,"code":"import _toConsumableArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/chartsjsSample.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport { BarChart, Bar, Line, LineChart, XAxis, YAxis, Tooltip } from 'recharts'; //======================Socket Setup=================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n}); //=====================Section End===================\n\nvar ChartjsHumidity = function ChartjsHumidity(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // 1. listen for a cpu event and update the state\n\n\n  useEffect(function () {\n    socket.on('hum', function (humidity) {\n      setData(function (currentData) {\n        return [].concat(_toConsumableArray(currentData), [humidity]);\n      });\n    });\n  }, []); // 2. render the line chart using the state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: {\n          title: {\n            display: true,\n            text: 'Average Rainfall per month',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChartjsHumidity, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = ChartjsHumidity;\nexport default ChartjsHumidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartjsHumidity\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/charts/chartsjsSample.js"],"names":["React","useEffect","useState","io","BarChart","Bar","Line","LineChart","XAxis","YAxis","Tooltip","socket","transports","ChartjsHumidity","data","setData","on","humidity","currentData","title","display","text","fontSize","legend","position"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,OAPF,QAQO,UARP,C,CAWA;;;AAEA,IAAMC,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACzCS,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB,C,CAKA;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAQ;AAAA;;AAAA;;AAAA,kBACNX,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MACvBY,IADuB;AAAA,MACjBC,OADiB,kBAG9B;;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,MAAM,CAACK,EAAP,CAAU,KAAV,EAAiB,UAAAC,QAAQ,EAAI;AAC3BF,MAAAA,OAAO,CAAC,UAAAG,WAAW;AAAA,4CAAQA,WAAR,IAAqBD,QAArB;AAAA,OAAZ,CAAP;AACD,KAFD;AAID,GALQ,EAKN,EALM,CAAT,CAJ8B,CAW9B;;AACA,sBACE;AAAA,2BAEA;AAAA,6BACA,QAAC,IAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,OAAO,EAAE;AACPK,UAAAA,KAAK,EAAC;AACJC,YAAAA,OAAO,EAAC,IADJ;AAEJC,YAAAA,IAAI,EAAC,4BAFD;AAGJC,YAAAA,QAAQ,EAAC;AAHL,WADC;AAMPC,UAAAA,MAAM,EAAC;AACLH,YAAAA,OAAO,EAAC,IADH;AAELI,YAAAA,QAAQ,EAAC;AAFJ;AANA;AAFX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAjCD;;GAAMX,e;;KAAAA,e;AAmCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport {\n  BarChart,\n  Bar,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip\n} from 'recharts';\n\n\n//======================Socket Setup=================\n\nconst socket = io(\"http://localhost:3001\", {\n  transports: ['websocket', 'polling']\n});\n\n\n//=====================Section End===================\n\n\nconst ChartjsHumidity = ({}) => {\n  const [data, setData] = useState([]);\n\n  // 1. listen for a cpu event and update the state\n  useEffect(() => {\n    socket.on('hum', humidity => {\n      setData(currentData => [...currentData, humidity]);\n    });\n  \n  }, []);\n\n  // 2. render the line chart using the state\n  return (\n    <div>\n        \n    <div>\n    <Line\n      data={data}\n      options={{\n        title:{\n          display:true,\n          text:'Average Rainfall per month',\n          fontSize:20\n        },\n        legend:{\n          display:true,\n          position:'right'\n        }\n      }}\n    />\n  </div>\n    </div>\n  );\n};\n\nexport default ChartjsHumidity;\n"]},"metadata":{},"sourceType":"module"}