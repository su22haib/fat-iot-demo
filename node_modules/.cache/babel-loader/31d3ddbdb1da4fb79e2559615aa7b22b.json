{"ast":null,"code":"import _objectSpread from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ReviewDataChart = function ReviewDataChart() {\n  _s();\n\n  var timeArr = [];\n  var dataArr = []; //This is where I collect data from the API response and put in an array.\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startDate = _useState4[0],\n      setStartDate = _useState4[1];\n\n  var convertDate = function convertDate() {\n    //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time). Change this to MM/dd/yyyy\n    var str = startDate.toString();\n    var parts = str.split(\" \");\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n  };\n\n  useEffect(function () {\n    var onSubmit = function onSubmit(data) {\n      console.log(typeof data.Node);\n      console.log(convertDate(startDate));\n      console.log(\"The Submit button was clicked\"); //API GET call to fetch old data.\n\n      axios.get(\"http://127.0.0.1:9000/data?node=\".concat(data.Node, \"&date=\").concat(convertDate(startDate))).then(function (response) {\n        console.log(response);\n        timeArr = response.time;\n        dataArr = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Node: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({}, register(\"Node\")), {}, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, _this)]\n          }), void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select the Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: function onChange(date) {\n              return setStartDate(date);\n            },\n            dateFormat: \"MM/dd/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Review Past Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(DbForm1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Data Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: [{\n            x: timeArr,\n            y: dataArr,\n            type: \"scatter\",\n            marker: {\n              color: \"red\"\n            }\n          }],\n          useResizeHandler: true,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          graphDiv: \"graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(ReviewDataChart, \"UWoaq8x4K2Ee7OnFHGPJE3BeoaU=\", false, function () {\n  return [useForm];\n});\n\n_c = ReviewDataChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewDataChart\");","map":{"version":3,"sources":["/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors.js"],"names":["React","useEffect","useState","createRef","useForm","DatePicker","CRow","CCol","CCard","CCardHeader","CCardBody","axios","Plot","ReviewDataChart","timeArr","dataArr","data","setData","register","handleSubmit","errors","formState","Date","startDate","setStartDate","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","onSubmit","console","log","Node","get","then","response","time","catch","error","date","x","y","type","marker","color","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst ReviewDataChart = () => {\n  let timeArr = [];\n  let dataArr = [];\n\n  //This is where I collect data from the API response and put in an array.\n  const [data, setData] = useState();\n\n  \n    const {\n      register,\n      handleSubmit,\n      formState: { errors },\n    } = useForm();\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    const convertDate = () => {\n      //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time). Change this to MM/dd/yyyy\n      let str = startDate.toString();\n      let parts = str.split(\" \");\n      let months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\",\n      };\n      return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n    };\n    \n    useEffect(() => {\n      const onSubmit = (data) => {\n        console.log(typeof data.Node);\n        console.log(convertDate(startDate));\n        console.log(\"The Submit button was clicked\");\n  \n        //API GET call to fetch old data.\n        axios\n          .get(`http://127.0.0.1:9000/data?node=${data.Node}&date=${convertDate(startDate)}`)\n          .then((response) => {\n            console.log(response);\n            timeArr = response.time;\n            dataArr = response.data;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      };\n    });\n\n    return (\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <CRow>\n            <CCol>\n              <label>Node: </label>\n              <select {...register(\"Node\")}>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n            </CCol>\n            <CCol>\n              <label>Select the Date</label>\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                dateFormat=\"MM/dd/yyyy\"\n              />\n            </CCol>\n            <CCol>\n              <input type=\"submit\" />\n            </CCol>\n          </CRow>\n        </form>\n        <CCard>\n          <CCardHeader>Review Past Data</CCardHeader>\n          <CCardBody>\n            <DbForm1 />\n          </CCardBody>\n          <CCardHeader>Data Chart</CCardHeader>\n          <CCardBody>\n            <Plot\n              data={[\n                {\n                  x: timeArr,\n                  y: dataArr,\n                  type: \"scatter\",\n                  marker: { color: \"red\" },\n                },\n              ]}\n              useResizeHandler={true}\n              style={{ width: \"100%\", height: \"100%\" }}\n              graphDiv=\"graph\"\n            />\n          </CCardBody>\n        </CCard>\n      </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}