{"ast":null,"code":"import _slicedToArray from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/Commands/ManualOverride.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Switch from 'react-switch';\nimport '../../scss/_custom.scss';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io.connect('http://localhost:9000', {\n  transports: ['websocket', 'polling'],\n  reconnect: true\n});\n\nvar ManualOverride = function ManualOverride() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var handleChange = function handleChange(nextChecked) {\n    setChecked(nextChecked);\n  };\n\n  useEffect(function () {\n    socket.on('connect', function (socket) {\n      console.log('Client connected');\n    });\n    var Status = {\n      LED: false\n    };\n\n    if (checked) {\n      Status.Override = true;\n    } else {\n      Status.Override = false;\n    }\n\n    socket.emit('Override', 'Node1', Status); // Update the document title using the browser API\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"example\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: handleChange,\n        checked: checked,\n        className: \"react-switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ManualOverride, \"UNAhWLyYaSzbtDfz4zr51r/nvPk=\");\n\n_c = ManualOverride;\nexport default ManualOverride;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManualOverride\");","map":{"version":3,"sources":["/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/Commands/ManualOverride.js"],"names":["React","useState","useEffect","Switch","io","socket","connect","transports","reconnect","ManualOverride","checked","setChecked","handleChange","nextChecked","on","console","log","Status","LED","Override","emit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,yBAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,EAAoC;AAC/CC,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd,CADmC;AAE/CC,EAAAA,SAAS,EAAE;AAFoC,CAApC,CAAf;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,kBACKR,QAAQ,CAAC,KAAD,CADb;AAAA;AAAA,MAClBS,OADkB;AAAA,MACTC,UADS;;AAGzB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AAClCF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,UAAUT,MAAV,EAAkB;AACnCU,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,KAFD;AAGA,QAAIC,MAAM,GAAG;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAb;;AAEA,QAAIR,OAAJ,EAAa;AACTO,MAAAA,MAAM,CAACE,QAAP,GAAkB,IAAlB;AACH,KAFD,MAEO;AACHF,MAAAA,MAAM,CAACE,QAAP,GAAkB,KAAlB;AACH;;AAEDd,IAAAA,MAAM,CAACe,IAAP,CAAY,UAAZ,EAAwB,OAAxB,EAAiCH,MAAjC,EAZY,CAaZ;AACH,GAdQ,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEL,YAAlB;AAAgC,QAAA,OAAO,EAAEF,OAAzC;AAAkD,QAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CA9BD;;GAAMD,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Switch from 'react-switch'\nimport '../../scss/_custom.scss'\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:9000', {\n    transports: ['websocket', 'polling'],\n    reconnect: true,\n})\n\nconst ManualOverride = () => {\n    const [checked, setChecked] = useState(false)\n\n    const handleChange = (nextChecked) => {\n        setChecked(nextChecked)\n    }\n\n    useEffect(() => {\n        socket.on('connect', function (socket) {\n            console.log('Client connected')\n        })\n        let Status = { LED: false }\n\n        if (checked) {\n            Status.Override = true\n        } else {\n            Status.Override = false\n        }\n\n        socket.emit('Override', 'Node1', Status)\n        // Update the document title using the browser API\n    })\n\n    return (\n        <div className=\"example\">\n            <label>\n                <Switch onChange={handleChange} checked={checked} className=\"react-switch\" />\n            </label>\n        </div>\n    )\n}\n\nexport default ManualOverride\n"]},"metadata":{},"sourceType":"module"}