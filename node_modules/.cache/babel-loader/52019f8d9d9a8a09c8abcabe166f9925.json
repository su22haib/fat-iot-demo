{"ast":null,"code":"import _classCallCheck from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/LEDButton.js\";\nimport React, { Component } from \"react\";\nimport Switch from \"react-switch\";\n/* MQTT Configuration */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"MyMQTT\",\n  port: 1883,\n  keepalive: 60\n};\nvar mqttclient = mqtt.connect(Broker_URL, options);\nmqttclient.on(\"connect\", function () {\n  //Callback Function connects to the broker.\n  var Topic = \"esp32/\";\n  console.log(\"Connecting MQTT\");\n  mqttclient.subscribe(Topic, function (err, granted) {\n    //This callback function subscribes to the preset topic.\n    console.log(\"Subscribed to \" + Topic);\n\n    if (err) {\n      console.log(err);\n    }\n  });\n});\n/* Section End */\n\nvar SwitchExample = /*#__PURE__*/function (_Component) {\n  _inherits(SwitchExample, _Component);\n\n  var _super = _createSuper(SwitchExample);\n\n  function SwitchExample() {\n    var _this;\n\n    _classCallCheck(this, SwitchExample);\n\n    _this = _super.call(this);\n    _this.state = {\n      checked: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SwitchExample, [{\n    key: \"handleChange\",\n    value: function handleChange(checked) {\n      //is this where i will write code to send an mqtt command?\n      mqttclient.on(\"connect\", function () {\n        //Callback Function connects to the broker.\n        var Topic = \"esp32/led\";\n        console.log(\"Connecting MQTT LED Topic\");\n        mqttclient.subscribe(Topic, function (err) {\n          if (checked == true) {\n            mqttclient.publish(Topic, \"ON\");\n          } else {\n            mqttclient.publish(Topic, \"OFF\");\n          }\n        });\n      });\n      this.setState({\n        checked: checked\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: this.handleChange,\n          checked: this.state.checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SwitchExample;\n}(Component);\n\nexport default SwitchExample;","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/LEDButton.js"],"names":["React","Component","Switch","mqtt","require","Broker_URL","options","clientId","port","keepalive","mqttclient","connect","on","Topic","console","log","subscribe","err","granted","SwitchExample","state","checked","handleChange","bind","publish","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA;;;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,UAAU,GAAG,kBAAjB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,QADE;AAEZC,EAAAA,IAAI,EAAE,IAFM;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAd;AAMA,IAAIC,UAAU,GAAGP,IAAI,CAACQ,OAAL,CAAaN,UAAb,EAAyBC,OAAzB,CAAjB;AAEAI,UAAU,CAACE,EAAX,CAAc,SAAd,EAAyB,YAAM;AAC7B;AACA,MAAIC,KAAK,GAAG,QAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAL,EAAAA,UAAU,CAACM,SAAX,CAAqBH,KAArB,EAA4B,UAACI,GAAD,EAAMC,OAAN,EAAkB;AAC5C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,KAA/B;;AACA,QAAII,GAAJ,EAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD;AACF,GAND;AAOD,CAZD;AAcA;;IAEME,a;;;;;AACJ,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAHY;AAIb;;;;WAED,sBAAaF,OAAb,EAAsB;AACpB;AAEAX,MAAAA,UAAU,CAACE,EAAX,CAAc,SAAd,EAAyB,YAAM;AAC7B;AAEA,YAAIC,KAAK,GAAG,WAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAL,QAAAA,UAAU,CAACM,SAAX,CAAqBH,KAArB,EAA4B,UAAUI,GAAV,EAAe;AACzC,cAAII,OAAO,IAAI,IAAf,EAAqB;AACnBX,YAAAA,UAAU,CAACc,OAAX,CAAmBX,KAAnB,EAA0B,IAA1B;AACD,WAFD,MAEO;AACLH,YAAAA,UAAU,CAACc,OAAX,CAAmBX,KAAnB,EAA0B,KAA1B;AACD;AACF,SAND;AAOD,OAZD;AAcA,WAAKY,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD;;;WAED,kBAAS;AACP,0BACE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKC,YAAvB;AAAqC,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;;;EAjCyBpB,S;;AAoC5B,eAAekB,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Switch from \"react-switch\";\n\n/* MQTT Configuration */\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar options = {\n  clientId: \"MyMQTT\",\n  port: 1883,\n  keepalive: 60,\n};\n\nvar mqttclient = mqtt.connect(Broker_URL, options);\n\nmqttclient.on(\"connect\", () => {\n  //Callback Function connects to the broker.\n  var Topic = \"esp32/\";\n\n  console.log(\"Connecting MQTT\");\n  mqttclient.subscribe(Topic, (err, granted) => {\n    //This callback function subscribes to the preset topic.\n    console.log(\"Subscribed to \" + Topic);\n    if (err) {\n      console.log(err);\n    }\n  });\n});\n\n/* Section End */\n\nclass SwitchExample extends Component {\n  constructor() {\n    super();\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(checked) {\n    //is this where i will write code to send an mqtt command?\n\n    mqttclient.on(\"connect\", () => {\n      //Callback Function connects to the broker.\n\n      var Topic = \"esp32/led\";\n      console.log(\"Connecting MQTT LED Topic\");\n      mqttclient.subscribe(Topic, function (err) {\n        if (checked == true) {\n          mqttclient.publish(Topic, \"ON\");\n        } else {\n          mqttclient.publish(Topic, \"OFF\");\n        }\n      });\n    });\n\n    this.setState({ checked });\n  }\n\n  render() {\n    return (\n      <label>\n        <Switch onChange={this.handleChange} checked={this.state.checked} />\n      </label>\n    );\n  }\n}\n\nexport default SwitchExample;\n"]},"metadata":{},"sourceType":"module"}