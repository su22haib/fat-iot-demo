{"ast":null,"code":"import _regeneratorRuntime from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors ori.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ReviewChart = function ReviewChart() {\n  _s();\n\n  var _useState = useState([{\n    x: [],\n    y: [],\n    type: \"scatter\",\n    marker: {\n      color: \"red\"\n    }\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchedData = _useState2[0],\n      setfetchedData = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startDate = _useState4[0],\n      setStartDate = _useState4[1]; //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time)           Change this to MM/dd/yyyy\n\n\n  var convertDate = function convertDate() {\n    var str = startDate.toString();\n    var parts = str.split(\" \");\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n  };\n\n  function onSubmit(_x) {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"The Submit button was clicked\");\n              axios.get(\"http://127.0.0.1:9000/data?node=\".concat(data.Node, \"&date=\").concat(convertDate(startDate))).then(function (response) {\n                //Data coming in from API, should be sent to create the chart.\n                console.log(response);\n                setfetchedData({\n                  x: response.time,\n                  y: response.data\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    setfetchedData();\n    console.log('UseEffect was triggered');\n  }, []); // const handleSubmit = (data) => {\n  //   onSubmit(data);\n  //   console.log('HandleSubmit Data.Node ===>', data.Node);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Review Past Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Node: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select the Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: startDate,\n                onChange: function onChange(date) {\n                  return setStartDate(date);\n                },\n                dateFormat: \"MM/dd/yyyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: [{\n            x: [],\n            y: [],\n            type: \"scatter\",\n            marker: {\n              color: \"red\"\n            }\n          }],\n          useResizeHandler: true,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          graphDiv: \"graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), \"``\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ReviewChart, \"YVWo+MAICOVbQzUFoLP3oZiiBtE=\", false, function () {\n  return [useForm];\n});\n\n_c = ReviewChart;\nexport default ReviewChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewChart\");","map":{"version":3,"sources":["/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors ori.js"],"names":["React","useEffect","useState","createRef","classNames","useForm","DatePicker","CRow","CCol","CCard","CCardHeader","CCardBody","rgbToHex","DocsLink","axios","Plot","ReviewChart","x","y","type","marker","color","fetchedData","setfetchedData","register","handleSubmit","errors","formState","Date","startDate","setStartDate","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","onSubmit","data","console","log","get","Node","then","response","time","catch","error","date","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ReviewChart = () => {\n  const [fetchedData, setfetchedData] = useState([\n    {\n      x: [],\n      y: [],\n      type: \"scatter\",\n      marker: { color: \"red\" },\n    },\n  ]);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const [startDate, setStartDate] = useState(new Date());\n\n  //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time)           Change this to MM/dd/yyyy\n  const convertDate = () => {\n    let str = startDate.toString();\n    let parts = str.split(\" \");\n    let months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\",\n    };\n    return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n  };\n\n  async function onSubmit(data) {\n    console.log(\"The Submit button was clicked\");\n    \n\n    axios.get(`http://127.0.0.1:9000/data?node=${data.Node}&date=${convertDate(startDate)}`)\n      .then((response) => {\n        //Data coming in from API, should be sent to create the chart.\n        console.log(response);\n       \n        setfetchedData(\n          {\n            x: response.time,\n            y: response.data,\n          }\n        )\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    setfetchedData();\n    console.log('UseEffect was triggered');\n  }, []);\n\n  // const handleSubmit = (data) => {\n  //   onSubmit(data);\n  //   console.log('HandleSubmit Data.Node ===>', data.Node);\n  // };\n\n  return (\n    <div>\n      <CCard>\n        <CCardHeader>Review Past Data</CCardHeader>\n        <CCardBody>\n          \n          <form onSubmit={handleSubmit(onSubmit)}>\n            <CRow>\n              <CCol>\n                <label>Node: </label>\n                \n              </CCol>\n              <CCol>\n                <label>Select the Date</label>\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                  dateFormat=\"MM/dd/yyyy\"\n                />\n              </CCol>\n              <CCol>\n                <input type=\"submit\" />\n              </CCol>\n            </CRow>\n          </form>\n        \n        </CCardBody>\n        <CCardHeader></CCardHeader>\n        <CCardBody>\n          <Plot\n            data={[\n              {\n                x: [],\n                y: [],\n                type: \"scatter\",\n                marker: { color: \"red\" },\n              },\n            ]}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            graphDiv=\"graph\"\n          />\n        </CCardBody>\n      </CCard>``\n    </div>\n  );\n};\n\nexport default ReviewChart;\n"]},"metadata":{},"sourceType":"module"}