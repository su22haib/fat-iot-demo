{"ast":null,"code":"import _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/LEDSwitch2.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\nimport \"../../scss/_custom.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar Options = {\n  clientId: \"MyMQTT\",\n  port: 1883,\n  keepalive: 60\n};\n\nvar BasicHooksExample = function BasicHooksExample() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var handleChange = function handleChange(nextChecked) {\n    setChecked(nextChecked);\n  };\n\n  useEffect(function () {\n    var client = mqtt.connect(Broker_URL, Options);\n    client.on(\"connect\", function () {\n      client.subscribe(\"esp32/led\", function (err) {\n        if (checked) {\n          client.publish(\"esp32/led\", \"ON\");\n          console.log(\"Sending On\");\n        } else {\n          client.publish(\"esp32/led\", \"OFF\");\n          console.log(\"Sending off\");\n        }\n      });\n    }); // Update the document title using the browser API\n\n    console.log(\"The Switch was clicked\", checked);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"example\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: handleChange,\n        checked: checked,\n        className: \"react-switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The LED is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: checked ? \"on\" : \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, _this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BasicHooksExample, \"UNAhWLyYaSzbtDfz4zr51r/nvPk=\");\n\n_c = BasicHooksExample;\nexport default BasicHooksExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicHooksExample\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/Commands/LEDSwitch2.js"],"names":["React","useState","useEffect","Switch","mqtt","require","Broker_URL","Options","clientId","port","keepalive","BasicHooksExample","checked","setChecked","handleChange","nextChecked","client","connect","on","subscribe","err","publish","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,yBAAP;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,UAAU,GAAG,kBAAjB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,QADE;AAEZC,EAAAA,IAAI,EAAE,IAFM;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAd;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA,kBACAV,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACvBW,OADuB;AAAA,MACdC,UADc;;AAG9B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AACpCF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,MAAM,GAAGZ,IAAI,CAACa,OAAL,CAAaX,UAAb,EAAyBC,OAAzB,CAAb;AAEAS,IAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC/BF,MAAAA,MAAM,CAACG,SAAP,CAAiB,WAAjB,EAA8B,UAAUC,GAAV,EAAe;AAC3C,YAAIR,OAAJ,EAAa;AACXI,UAAAA,MAAM,CAACK,OAAP,CAAe,WAAf,EAA4B,IAA5B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,SAHD,MAGO;AACLP,UAAAA,MAAM,CAACK,OAAP,CAAe,WAAf,EAA4B,KAA5B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,OARD;AASD,KAVD,EAHc,CAcd;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCX,OAAtC;AACD,GAhBQ,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEE,YADZ;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAQE;AAAA,6CACa;AAAA,kBAAOA,OAAO,GAAG,IAAH,GAAU;AAAxB;AAAA;AAAA;AAAA;AAAA,eADb;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAvCD;;GAAMD,iB;;KAAAA,iB;AAyCN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\nimport \"../../scss/_custom.scss\";\nvar mqtt = require(\"mqtt\");\n\nvar Broker_URL = \"mqtt://127.0.0.1\";\nvar Options = {\n  clientId: \"MyMQTT\",\n  port: 1883,\n  keepalive: 60,\n};\n\nconst BasicHooksExample = () => {\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = (nextChecked) => {\n    setChecked(nextChecked);\n  };\n\n  useEffect(() => {\n    var client = mqtt.connect(Broker_URL, Options);\n\n    client.on(\"connect\", function () {\n      client.subscribe(\"esp32/led\", function (err) {\n        if (checked) {\n          client.publish(\"esp32/led\", \"ON\");\n          console.log(\"Sending On\")\n        } else {\n          client.publish(\"esp32/led\", \"OFF\");\n          console.log(\"Sending off\")\n        }\n      });\n    });\n    // Update the document title using the browser API\n    console.log(\"The Switch was clicked\", checked);\n  });\n\n  return (\n    <div className=\"example\">\n      <label>\n        <Switch\n          onChange={handleChange}\n          checked={checked}\n          className=\"react-switch\"\n        />\n      </label>\n      <p>\n        The LED is <span>{checked ? \"on\" : \"off\"}</span>.\n      </p>\n    </div>\n  );\n};\n\nexport default BasicHooksExample;\n"]},"metadata":{},"sourceType":"module"}