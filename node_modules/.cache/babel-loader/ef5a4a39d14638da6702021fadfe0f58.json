{"ast":null,"code":"import _slicedToArray from \"/home/suhaib/Desktop/frontend/remote-monitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/frontend/remote-monitoring/src/views/widgets/NodeCountWidget.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CWidgetDropdown, CRow, CCol, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport ChartBarSimple from \"../charts/ChartLineSimple\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar socket = io(\"http://localhost:9000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nvar NodeCountWidget = function NodeCountWidget() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    socket.on(\"nodeCount\", function (data) {\n      setCount(count = data.value);\n    });\n  }); // render\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n          color: \"gradient-success\",\n          header: count,\n          text: \"Total Data Nodes Connected\",\n          footerSlot: /*#__PURE__*/_jsxDEV(ChartBarSimple, {\n            className: \"mt-3 mx-3\",\n            style: {\n              height: \"70px\"\n            },\n            backgroundColor: \"success\",\n            label: \"Members\",\n            labels: \"months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(NodeCountWidget, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = NodeCountWidget;\nexport default NodeCountWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeCountWidget\");","map":{"version":3,"sources":["/home/suhaib/Desktop/frontend/remote-monitoring/src/views/widgets/NodeCountWidget.js"],"names":["React","useEffect","useState","CWidgetDropdown","CRow","CCol","CDropdown","CDropdownMenu","CDropdownItem","CDropdownToggle","CIcon","ChartBarSimple","io","socket","transports","NodeCountWidget","count","setCount","on","data","value","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,eADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,eAPF,QAQO,eARP;AASA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,EAA0B;AACzCE,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACJb,QAAQ,CAAC,CAAD,CADJ;AAAA;AAAA,MACvBc,KADuB;AAAA,MAChBC,QADgB;;AAG5BhB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,MAAM,CAACK,EAAP,CAAU,WAAV,EAAuB,UAACC,IAAD,EAAU;AAC/BF,MAAAA,QAAQ,CAACD,KAAK,GAAGG,IAAI,CAACC,KAAd,CAAR;AACD,KAFD;AAGD,GAJQ,CAAT,CAH4B,CAS5B;;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACA,QAAC,eAAD;AACA,UAAA,KAAK,EAAC,kBADN;AAEA,UAAA,MAAM,EAAEJ,KAFR;AAGA,UAAA,IAAI,EAAC,4BAHL;AAIA,UAAA,UAAU,eACR,QAAC,cAAD;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAE;AAAEK,cAAAA,MAAM,EAAE;AAAV,aAFT;AAGE,YAAA,eAAe,EAAC,SAHlB;AAIE,YAAA,KAAK,EAAC,SAJR;AAKE,YAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CAjCD;;GAAMN,e;;KAAAA,e;AAmCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport ChartBarSimple from \"../charts/ChartLineSimple\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:9000\", {\n  transports: [\"websocket\", \"polling\"],\n});\n\nconst NodeCountWidget = () => {\n  let [count, setCount] = useState(0);\n  \n  useEffect(() => {\n    socket.on(\"nodeCount\", (data) => {\n      setCount(count = data.value);\n    });\n  });\n\n  // render\n  return (\n    <>\n      <CRow>\n        <CCol>\n        <CWidgetDropdown\n        color=\"gradient-success\"\n        header={count}\n        text=\"Total Data Nodes Connected\"\n        footerSlot={\n          <ChartBarSimple\n            className=\"mt-3 mx-3\"\n            style={{ height: \"70px\" }}\n            backgroundColor=\"success\"\n            label=\"Members\"\n            labels=\"months\"\n          />\n        }\n      >\n      </CWidgetDropdown>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default NodeCountWidget;\n"]},"metadata":{},"sourceType":"module"}