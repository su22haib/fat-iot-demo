{"ast":null,"code":"import _objectSpread from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors ori.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SampleChart = function SampleChart() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState([{\n    x: [],\n    y: [],\n    type: \"scatter\",\n    marker: {\n      color: \"red\"\n    }\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  function DbForm1() {\n    _s();\n\n    var _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.formState.errors;\n\n    var _useState3 = useState(new Date()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startDate = _useState4[0],\n        setStartDate = _useState4[1];\n\n    useEffect(function () {\n      //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time)           Change this to MM/dd/yyyy\n      var convertDate = function convertDate() {\n        var str = startDate.toString();\n        var parts = str.split(\" \");\n        var months = {\n          Jan: \"01\",\n          Feb: \"02\",\n          Mar: \"03\",\n          Apr: \"04\",\n          May: \"05\",\n          Jun: \"06\",\n          Jul: \"07\",\n          Aug: \"08\",\n          Sep: \"09\",\n          Oct: \"10\",\n          Nov: \"11\",\n          Dec: \"12\"\n        };\n        return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n      };\n\n      var onSubmit = function onSubmit(data) {\n        console.log(data.Node);\n        console.log(convertDate(startDate));\n        console.log(\"The Submit button was clicked\");\n        axios.get(\"http://127.0.0.1:9000/dbtest\") //data?node=${toString(data.Node)}&date=${convertDate(startDate)}\n        .then(function (response) {\n          //Data coming in from API, should be sent to create the chart.\n          console.log(response);\n          setData({\n            x: response.time,\n            y: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      };\n    }, []);\n  } //This is where I push data from the response .\n\n\n  _s(DbForm1, \"mS9ziaBavBT+UQTNrL5kVXd2Xx4=\", false, function () {\n    return [useForm];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Review Past Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Node: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({}, register(\"Node\")), {}, {\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6\",\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 15\n                }, _this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select the Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: startDate,\n                onChange: function onChange(date) {\n                  return setStartDate(date);\n                },\n                dateFormat: \"MM/dd/yyyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: [{\n            x: [],\n            y: [],\n            type: \"scatter\",\n            marker: {\n              color: \"red\"\n            }\n          }],\n          useResizeHandler: true,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          graphDiv: \"graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(SampleChart, \"fPqeenVYBhjVgeHM5plSZ8emLQE=\");\n\n_c = SampleChart;\nexport default SampleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChart\");","map":{"version":3,"sources":["/home/suhaib/Desktop/Work/Iot-Demo/Code/Demo-FrontEnd/src/views/theme/colors/Colors ori.js"],"names":["React","useEffect","useState","createRef","classNames","useForm","DatePicker","CRow","CCol","CCard","CCardHeader","CCardBody","rgbToHex","DocsLink","axios","Plot","SampleChart","x","y","type","marker","color","data","setData","DbForm1","register","handleSubmit","errors","formState","Date","startDate","setStartDate","convertDate","str","toString","parts","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","onSubmit","console","log","Node","get","then","response","time","catch","error","date","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport { DocsLink } from \"src/reusable\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst SampleChart = () => {\n\n  const [data, setData] = useState(\n    [\n      {\n        x: [],\n        y: [],\n        type: \"scatter\",\n        marker: { color: \"red\" },\n      },\n    ]\n  );\n\n  function DbForm1() {\n    const {\n      register,\n      handleSubmit,\n      formState: { errors },\n    } = useForm();\n\n    const [startDate, setStartDate] = useState(new Date());\n    useEffect(() => {\n    //Mon May 10 2021 12:00:03 GMT+0800 (Malaysia Time)           Change this to MM/dd/yyyy\n    const convertDate = () => {\n      let str = startDate.toString();\n      let parts = str.split(\" \");\n      let months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\",\n      };\n      return months[parts[1]] + \"/\" + parts[2] + \"/\" + parts[3];\n    };\n\n    const onSubmit = (data) => {\n      console.log(data.Node);\n      console.log(convertDate(startDate));\n\n      console.log(\"The Submit button was clicked\");\n      axios\n        .get(`http://127.0.0.1:9000/dbtest`) //data?node=${toString(data.Node)}&date=${convertDate(startDate)}\n        .then((response) => {\n          //Data coming in from API, should be sent to create the chart.\n          console.log(response);\n          setData({\n            x:response.time,\n            y:response.data\n          })\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n  }, []);\n  }\n\n  //This is where I push data from the response .\n\n    \n  \n\n  return (\n    <div>\n      <CCard>\n        <CCardHeader>Review Past Data</CCardHeader>\n        <CCardBody>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <CRow>\n          <CCol>\n            <label>Node: </label>\n            <select {...register(\"Node\")}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n            </select>\n          </CCol>\n          <CCol>\n            <label>Select the Date</label>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n            />\n          </CCol>\n          <CCol>\n            <input type=\"submit\" />\n          </CCol>\n        </CRow>\n      </form>\n\n        </CCardBody>\n        <CCardHeader></CCardHeader>\n        <CCardBody>\n          <Plot\n            data={[\n              {\n                x: [],\n                y: [],\n                type: \"scatter\",\n                marker: { color: \"red\" },\n              },\n            ]}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            graphDiv=\"graph\"\n          />\n        </CCardBody>\n      </CCard>\n    </div>\n  );\n};\n\nexport default SampleChart;\n"]},"metadata":{},"sourceType":"module"}